{"version":3,"sources":["Joke.js","JokeList.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","handleClick","bind","length","getJokes","a","numJokesToGet","axios","get","headers","Accept","res","newJoke","data","joke","has","console","log","push","id","uuidv4","setState","st","setItem","stringify","alert","delta","sort","b","src","alt","handleVote","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c027bc67.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './joke.css';\r\n//Joke component is stateless, just calls on these icons an event \r\n//handler that is passed down from the parent\r\nclass Joke extends Component {\r\n\r\n    getColor(){\r\n        if(this.props.votes >= 15){\r\n            return \"#4CAF50\";\r\n        }else if(this.props.votes >= 12){\r\n            return \"#8BC34A\";\r\n        }else if(this.props.votes >= 9){\r\n            return \"#CDDC39\";\r\n        }else if(this.props.votes >= 6){\r\n            return \"#FFEB3B\";\r\n        }else if(this.props.votes >= 3){\r\n            return \"#FFC107\";\r\n        }else if(this.props.votes >= 0){\r\n            return \"#FF9800\";\r\n        }else {\r\n            return \"#f44336\";\r\n        }\r\n    }\r\n    getEmoji(){\r\n        if(this.props.votes >= 15){\r\n            return \"em em-rolling_on_the_floor_laughing\";\r\n        }else if(this.props.votes >= 12){\r\n            return \"em em-laughing\";\r\n        }else if(this.props.votes >= 9){\r\n            return \"em em-smiley\";\r\n        }else if(this.props.votes >= 6){\r\n            return \"em em-slightly_smiling_face\";\r\n        }else if(this.props.votes >= 3){\r\n            return \"em em-neutral_face\";\r\n        }else if(this.props.votes >= 0){\r\n            return \"em em-confused\";\r\n        }else {\r\n            return \"em em-angry\";\r\n        }\r\n    }\r\n    render() {\r\n        return (//used font awesome below to create icons for up and down arrows\r\n            <div className='Joke'>\r\n                <div className='Joke-buttons'> \r\n                    <i className='fas fa-arrow-up' onClick={this.props.upvote} />\r\n                    <span className='Joke-votes' style={{ borderColor: this.getColor() }}>{this.props.votes}</span>\r\n                    <i className='fas fa-arrow-down' onClick={this.props.downvote} />\r\n                </div>\r\n                <div className='Joke-text'>{this.props.text}</div>\r\n                <div className = 'Joke-smiley'>\r\n                <i className={this.getEmoji()} />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Joke;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './JokeList.css';\r\nimport Joke from './Joke';//allows access to upvote and downvote passed to Joke.js from the render below\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nclass JokeList extends Component {\r\n  static defaultProps = {\r\n    numJokesToGet: 10,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      jokes: JSON.parse(window.localStorage.getItem('jokes') || \"[]\"), \r\n      loading: false\r\n  };\r\n  this.seenJokes = new Set(this.state.jokes.map(j => j.text));\r\n  this.handleClick = this.handleClick.bind(this)\r\n}\r\n  componentDidMount() {\r\n    if (this.state.jokes.length === 0) this.getJokes();\r\n  }\r\n  async getJokes() {\r\n    try{\r\n\r\n    let jokes = [];//temporary array\r\n    while (jokes.length < this.props.numJokesToGet) {//set state once after getting 10 jokes--use while to handle duplicate jokes when we request 10 new jokes\r\n      let res = await axios.get(\"https://icanhazdadjoke.com/\", {\r\n        headers: { Accept: \"application/json\" }\r\n      });\r\n      //call uuid as a function so with open and closing parenthesis\r\n      let newJoke = res.data.joke;\r\n      if (!this.seenJokes.has(newJoke)) {\r\n        jokes.push({id: uuidv4(), text: newJoke, votes: 0}); //res.data.joke is the path to a joke from the api--making it an object allows other properties like votes to be added to each joke--using uuid provides an id for each joke so we can access them individualy in the hadleVote function\r\n      }else {\r\n        console.log(\"FOUND A DUPLICATE!\");\r\n        console.log(newJoke);\r\n      }\r\n      \r\n    }\r\n  \r\n    this.setState(st => ({\r\n      loading: false, \r\n      jokes: [...st.jokes, ...jokes] \r\n    }),\r\n    () => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))); //will add new jokes to jokes array\r\n  } catch(e) {\r\n    alert(e);\r\n    this.setState({loading: false})\r\n  }\r\n   }\r\n    \r\n  \r\n  handleVote(id, delta) {//delta could be a negative number or positive number--id tells which part of the state to update\r\n      this.setState(\r\n          st =>({//implicit return so parenthesis wraps arrow function--st is the variable holding the old state\r\n              jokes: st.jokes.map(j =>\r\n                j.id === id ? {...j, votes: j.votes + delta} : j)//if the joke id is equal to the id that we pass in, take that joke and set its votes property add delta\r\n            }),\r\n            () => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\r\n           );\r\n  }\r\n  handleClick(){\r\n    this.setState({loading: true},this.getJokes)    \r\n  }\r\n  render() {\r\n    if(this.state.loading) {\r\n      return (\r\n        <div className=\"JokeList-spinner\">\r\n          <i className=\"far fa-8x fa-laugh fa-spin\" />\r\n          <h1 className='JokeList-title'>Loading...</h1>\r\n        </div>\r\n      )\r\n    }\r\n    let jokes = this.state.jokes.sort((a,b) => b.votes - a.votes);\r\n    return (\r\n      <div className=\"JokeList\">\r\n          <div className='JokeList-sidebar'>\r\n              <h1 className='JokeList-title'>\r\n                  <span>Dad</span> Jokes\r\n              </h1>\r\n              <img\r\n                src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg' alt=\"icon\"/>\r\n                <button className='JokeList-getmore' onClick={this.handleClick}>Fetch Jokes</button>\r\n          </div>\r\n      \r\n        <div className=\"JokeList-jokes\">\r\n          {jokes.map((j) => (\r\n            // <div>{j.text} - {j.votes}</div> was mapping to a div\r\n            <Joke \r\n                key={j.id}//taken from the uuid given to each joke--needed to address key rule in React \r\n                votes={j.votes} \r\n                text={j.text} //changed to map from an instance of Joke\r\n                //below we have two methods that we have access too inside the props in the joke\r\n                upvote={()=> this.handleVote(j.id, 1)}\r\n                downvote={()=> this.handleVote(j.id, -1)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default JokeList;\r\n","import React  from 'react';\nimport './App.css';\nimport JokeList from './JokeList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}